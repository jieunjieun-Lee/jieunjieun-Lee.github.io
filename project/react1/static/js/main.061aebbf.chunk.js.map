{"version":3,"sources":["waiting/Input.js","waiting/Item.js","waiting/List.js","waiting/Main.js","App.js","reportWebVitals.js","index.js"],"names":["Input","onAdd","textRef","useRef","useState","text","setText","className","type","placeholder","value","onChange","e","target","ref","onClick","current","focus","Item","item","onRemove","onToggle","id","name","done","List","data","map","Main","no","setData","filter","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"6OA4BeA,EA1BD,SAAC,GAAa,IAAZC,EAAW,EAAXA,MACNC,EAAUC,mBADO,EAECC,mBAAS,IAFV,mBAEhBC,EAFgB,KAEVC,EAFU,KAkBvB,OACI,sBAAKC,UAAU,OAAf,UACI,uBAAOC,KAAK,OAAOC,YAAY,uEAAgBC,MAAOL,EAAMM,SAhBhD,SAACC,GAAO,IACjBF,EAASE,EAAEC,OAAXH,MACPJ,EAAQI,IAc+EI,IAAKZ,IACxF,wBAAQa,QAZC,WACTV,IAGJJ,EAAMI,GACNC,EAAQ,IACRJ,EAAQc,QAAQC,UAMZ,8BCTGC,EAZF,SAAC,GAAgC,IAA/BC,EAA8B,EAA9BA,KAAMC,EAAwB,EAAxBA,SAAUC,EAAc,EAAdA,SACpBC,EAAkBH,EAAlBG,GAAIC,EAAcJ,EAAdI,KAAMC,EAAQL,EAARK,KAEjB,OACI,qBAAIjB,UAAWiB,EAAO,KAAK,GAA3B,UACI,sBAAMT,QAAS,kBAAMM,EAASC,IAA9B,oBACA,oBAAIP,QAAS,kBAAMM,EAASC,IAA5B,SAAkCC,IAClC,wBAAQR,QAAS,kBAAMK,EAASE,IAAhC,8BCKGG,EAXF,SAAC,GAAgC,IAA/BC,EAA8B,EAA9BA,KAAMN,EAAwB,EAAxBA,SAAUC,EAAc,EAAdA,SAC3B,OACI,6BAEQK,EAAKC,KAAI,SAAAR,GAAI,OAAI,cAAC,EAAD,CAAoBA,KAAMA,EAC3CC,SAAUA,EAAUC,SAAUA,GADFF,EAAKG,UCiClCM,G,YAlCF,WACT,IAAMC,EAAK1B,iBAAO,GADH,EAESC,mBAAS,CAC7B,CAACkB,GAAG,EAAGC,KAAK,qBAAOC,MAAK,GACxB,CAACF,GAAG,EAAGC,KAAK,qBAAOC,MAAK,KAJb,mBAERE,EAFQ,KAEFI,EAFE,KAwBf,OACI,sBAAKvB,UAAU,OAAf,UACI,iEACA,cAAC,EAAD,CAAON,MApBD,SAACI,GACXyB,EAAQ,GAAD,mBACAJ,GADA,CAEH,CAAEJ,GAAGO,EAAGb,UAAWO,KAAKlB,EAAMmB,MAAK,SAkBnC,cAAC,EAAD,CAAME,KAAMA,EAAMN,SAdT,SAACE,GACdQ,EAAQJ,EAAKK,QAAO,SAAAZ,GAAI,OAAIA,EAAKG,KAAOA,OAaED,SAV7B,SAACC,GACdQ,EAAQJ,EAAKC,KAAI,SAAAR,GAAI,OAAIA,EAAKG,KAAOA,EAAZ,2BACjBH,GADiB,IACXK,MAAML,EAAKK,OAAML,cCbxBa,EATH,WACV,OACE,8BAEE,cAAC,EAAD,OCISC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.061aebbf.chunk.js","sourcesContent":["import React, { useRef, useState } from 'react';\r\n\r\nconst Input = ({onAdd}) => {\r\n    const textRef = useRef()\r\n    const [text, setText] = useState('')\r\n\r\n    const changeInput = (e) => {\r\n        const {value} = e.target\r\n        setText(value)\r\n    }\r\n\r\n    const onInsert = () => {\r\n        if(!text) return\r\n        // text에 내용이 없으면 돌아가라 : 추가하지 말아라\r\n\r\n        onAdd(text)\r\n        setText('')\r\n        textRef.current.focus()\r\n    }\r\n\r\n    return (\r\n        <div className=\"form\">\r\n            <input type=\"text\" placeholder=\"대기자 명단을 입력하세요\" value={text} onChange={changeInput} ref={textRef} />\r\n            <button onClick={onInsert}>확인</button>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Input;","import React from 'react';\r\n\r\nconst Item = ({item, onRemove, onToggle}) => {\r\n    const {id, name, done} = item\r\n\r\n    return (\r\n        <li className={done ? 'on':''}>\r\n            <span onClick={() => onToggle(id)}>&#10003;</span>\r\n            <em onClick={() => onToggle(id)}>{name}</em>\r\n            <button onClick={() => onRemove(id)}>승인</button>\r\n        </li>\r\n    );\r\n};\r\n\r\nexport default Item;","import React from 'react';\r\nimport Item from './Item';\r\n\r\nconst List = ({data, onRemove, onToggle}) => {\r\n    return (\r\n        <ul>\r\n            {\r\n                data.map(item => <Item key={item.id} item={item} \r\n                onRemove={onRemove} onToggle={onToggle} />)\r\n            }\r\n        </ul>\r\n    );\r\n};\r\n\r\nexport default List;","import React, { useRef, useState } from 'react';\r\nimport Input from './Input';\r\nimport List from './List';\r\nimport './reset.css'\r\nimport './style.css'\r\n\r\nconst Main = () => {\r\n    const no = useRef(3)\r\n    const [data, setData] = useState([\r\n        {id:1, name:'유재석', done:false},\r\n        {id:2, name:'이효리', done:false},\r\n    ])\r\n\r\n    const onAdd = (text) => {\r\n        setData([\r\n            ...data, \r\n            { id:no.current++, name:text, done:false }\r\n        ])\r\n    }\r\n\r\n    const onRemove = (id) => {\r\n        setData(data.filter(item => item.id !== id))\r\n    }\r\n\r\n    const onToggle = (id) => {\r\n        setData(data.map(item => item.id === id ? \r\n            {...item, done:!item.done}:item ))\r\n        // 같으면 변경하고 다르면 그냥 넘겨주겠다\r\n    }\r\n\r\n    return (\r\n        <div className=\"wrap\">\r\n            <h1>대기자 명단</h1>\r\n            <Input onAdd={onAdd}/>\r\n            <List data={data} onRemove={onRemove} onToggle={onToggle} />\r\n            {/* data={data} 앞에가 props, 뒤에가 값 */}\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Main;","import React from 'react';\nimport Main from './waiting/Main';\n// import Test4 from './components/Test4';\n\nconst App = () => {\n  return (\n    <div>\n      {/* <Test4/> */}\n      <Main/>\n    </div>\n  );\n};\n\nexport default App;","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}